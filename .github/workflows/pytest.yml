# yamllint disable rule:truthy
---
name: Pytest Workflow with Allure History

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      # 1. Клонування репозиторію та отримання повної історії
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Встановлення Python та залежностей
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      # 3. Кешування та встановлення залежностей
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest allure-pytest pytest-html

      # 4. Встановлення Google Chrome
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg unzip
          wget -q -O - \
            https://dl.google.com/linux/linux_signing_key.pub | \
            sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ \
            stable main" | \
            sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # 5. Встановлення Allure CLI
      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          URL="https://github.com/allure-framework/allure2/releases/\download/2.27.0/allure-2.27.0.tgz"
          curl -Lo allure.tgz "$URL"
          sudo tar -xzf allure.tgz -C /opt/
          sudo ln -sf /opt/allure-2.27.0/bin/allure /usr/bin/allure

      # 6. Отримання попередньої історії Allure з gh-pages
      - name: Get previous Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages-history

      # 7. Запуск Pytest і копіювання історії
      - name: Run pytest and copy history
        run: |
          mkdir -p allure-results
          if [ -d "gh-pages-history/history" ]; then
            echo "Copying history from previous run"
            cp -r gh-pages-history/history allure-results/
          fi
          pytest -s --alluredir=allure-results tests/

      # 8. Генерація Allure-звіту з історією
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o _site
          touch _site/.nojekyll

      # 9. Деплой звіту на GitHub Pages
      - name: Deploy reports to GitHub Pages
        if: ${{ github.actor != 'nektos/act' }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: _site
          keep_files: true
          force_orphan: false
